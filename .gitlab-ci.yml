variables:
  IMAGE_TEST_FRONTEND: $CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH-test-frontend:latest
  IMAGE_DEPLOY_FRONTEND: $CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH-frontend:$CI_COMMIT_SHORT_SHA
  DOCKER_TLS_CERTDIR: "/certs"
  

stages:
  - build
  - misc
  - deploy

.base:
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - docker --version
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"

build:builder:
  extends: .base
  stage: build
  script:
    - cd web
    - docker buildx build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from "$IMAGE_TEST_FRONTEND" --target builder -t "$IMAGE_TEST_FRONTEND" .
    - docker push "$IMAGE_TEST_FRONTEND"

build:frontend:
  extends: .base
  stage: misc
  needs: ["build:builder"]
  script:
    - cd web
    - docker buildx build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from "$IMAGE_TEST_FRONTEND" --target runner -t "$IMAGE_DEPLOY_FRONTEND" .
    - docker push "$IMAGE_DEPLOY_FRONTEND"

deploy:
  stage: deploy
  image: ubuntu
  needs: ["build:frontend"]
  script:
    - apt-get update && apt-get install -y git
    - git clone https://root:$GITLAB_TOKEN@gitlab.tectsoft.com/manifests/boris-boarman.git
    - cd boris-boarman
    - rm -rf kustomizations/$CI_COMMIT_BRANCH
    - cp -r template kustomizations/$CI_COMMIT_BRANCH
    - cd kustomizations/$CI_COMMIT_BRANCH/
    - git config --global user.email "asim@tectsoft.com"
    - git config --global user.name "Asim Abbas"
    
    - sed -i "s|updated-image-name:new-tag|$IMAGE_DEPLOY_BACKEND|g" deployment-patch.yaml

    - sed -i "s|updated-image-name-frontend:new-tag|$IMAGE_DEPLOY_FRONTEND|g" deployment-patch.yaml

    - sed -i "s|updated-app-ingress|$CI_PROJECT_NAME-$CI_COMMIT_BRANCH|g" ingress-patch.yaml 
        
    - sed -i "s|toBeReplacedSuffix|-$CI_COMMIT_BRANCH|g" kustomization.yaml
    
    - sed -i "s|toBeReplacedNameSpace|$CI_PROJECT_PATH_SLUG-$CI_COMMIT_BRANCH|g" kustomization.yaml

    - cd ../..

    - |
      if [[ $(git status --porcelain) ]]; then
          git add .
          git commit -m "Modify Flux manifests"
          git push origin master
      else
          echo "No changes detected. Nothing to commit."
      fi
    
    - echo "Deployed"
    - echo "APP:\ https://${CI_PROJECT_NAME}-${CI_COMMIT_BRANCH}-app.dep.zsoft.link/"
    # - while true; do sleep 3600; done  # Running an infinite loop to keep the job active
  environment:
    name: ${CI_COMMIT_BRANCH}
    url: https://${CI_PROJECT_NAME}-${CI_COMMIT_BRANCH}-app.dep.zsoft.link/
    on_stop: stop_environment

stop_environment:
  stage: deploy
  image: ubuntu
  script:
    - apt-get update && apt-get install -y git
    - git clone https://root:$GITLAB_TOKEN@gitlab.tectsoft.com/manifests/boris-boarman.git
    - cd boris-boarman
    - rm -rf kustomizations/$CI_COMMIT_BRANCH
    - git config --global user.email "asim@tectsoft.com"
    - git config --global user.name "Asim Abbas"
    - |
      if [[ $(git status --porcelain) ]]; then
          git add .
          git commit -m "Remove Flux env from manifests"
          git push origin master
      else
          echo "No changes detected. Nothing to commit."
      fi
  when: manual
  environment:
    name: ${CI_COMMIT_BRANCH}
    action: stop
